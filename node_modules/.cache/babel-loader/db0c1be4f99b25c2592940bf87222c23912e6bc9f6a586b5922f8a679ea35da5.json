{"ast":null,"code":"var _jsxFileName = \"/home/arka/Documents/React/Expense-Tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport ExpenseForm from './Components/ExpenseForm/ExpenseForm';\nimport ExpenseInfo from './Components/ExpenseInfo/ExpenseInfo';\nimport ExpenseList from './Components/ExpenseList/ExpenseList';\nimport \"./App.css\";\nimport { deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from './FirebaseInit';\n\n// Reducer function to manage state changes\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  const {\n    payload\n  } = action;\n  switch (action.type) {\n    case \"ADD\":\n      {\n        const alreadyExists = state.expenses.some(exp => exp.id === payload.expense.id);\n        if (alreadyExists) return state;\n        return {\n          expenses: [payload.expense, ...state.expenses]\n        };\n      }\n    case \"DELETE\":\n      {\n        return {\n          expenses: state.expenses.filter(expense => expense.id !== payload.id) // Remove expense from state\n        };\n      }\n    case \"UPDATE_EXPENSE\":\n      {\n        const updatedExpenses = state.expenses.map(expense => expense.id === payload.expense.id ? payload.expense : expense // Update the correct expense\n        );\n        return {\n          expenses: updatedExpenses\n        };\n      }\n    default:\n      return state;\n  }\n};\nfunction App() {\n  _s();\n  useEffect(() => {\n    document.title = \"Expense Tracker\";\n  }, []);\n\n  // Initialize state with reducer\n  const [state, dispatch] = useReducer(reducer, {\n    expenses: []\n  });\n  const [expenseToUpdate, setExpenseToUpdate] = useState(null);\n\n  // Function to add an expense\n  const addExpense = expense => {\n    if (!expense || !expense.id) return;\n    dispatch({\n      type: \"ADD\",\n      payload: {\n        expense\n      }\n    });\n  };\n\n  // Function to delete an expense\n  const deleteExpense = async id => {\n    try {\n      const docRef = doc(db, \"expenses\", id);\n      await deleteDoc(docRef); // Delete from Firestore\n      dispatch({\n        type: \"DELETE\",\n        payload: {\n          id\n        }\n      }); // Update state\n    } catch (error) {\n      console.error(\"Error deleting expense:\", error);\n    }\n  };\n\n  // Reset the expense to update when editing\n  const resetExpenseToUpdate = () => {\n    setExpenseToUpdate(null);\n  };\n\n  // Function to update an expense\n  const updateExpense = expense => {\n    dispatch({\n      type: \"UPDATE_EXPENSE\",\n      payload: {\n        expense\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseForm, {\n        addExpense: addExpense,\n        expenseToUpdate: expenseToUpdate,\n        updateExpense: updateExpense,\n        resetExpenseToUpdate: resetExpenseToUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseInfo, {\n          expenses: state.expenses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ExpenseList, {\n          expenses: state.expenses,\n          deleteExpense: deleteExpense,\n          changeExpenseToUpdate: setExpenseToUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"sG2eG94ETJGFaN2+IaleWu1HbIk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","ExpenseForm","ExpenseInfo","ExpenseList","deleteDoc","doc","db","jsxDEV","_jsxDEV","Fragment","_Fragment","reducer","state","action","payload","type","alreadyExists","expenses","some","exp","id","expense","filter","updatedExpenses","map","App","_s","document","title","dispatch","expenseToUpdate","setExpenseToUpdate","addExpense","deleteExpense","docRef","error","console","resetExpenseToUpdate","updateExpense","children","className","fileName","_jsxFileName","lineNumber","columnNumber","changeExpenseToUpdate","_c","$RefreshReg$"],"sources":["/home/arka/Documents/React/Expense-Tracker/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect, useReducer } from 'react';\nimport ExpenseForm from './Components/ExpenseForm/ExpenseForm';\nimport ExpenseInfo from './Components/ExpenseInfo/ExpenseInfo';\nimport ExpenseList from './Components/ExpenseList/ExpenseList';\nimport \"./App.css\";\nimport { deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from './FirebaseInit';\n\n// Reducer function to manage state changes\nconst reducer = (state, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case \"ADD\": {\n      const alreadyExists = state.expenses.some(exp => exp.id === payload.expense.id);\n      if (alreadyExists) return state;\n      return {\n        expenses: [payload.expense, ...state.expenses]\n      };\n    }\n\n    case \"DELETE\": {\n      return {\n        expenses: state.expenses.filter(expense => expense.id !== payload.id) // Remove expense from state\n      };\n    }\n\n    case \"UPDATE_EXPENSE\": {\n      const updatedExpenses = state.expenses.map((expense) =>\n        expense.id === payload.expense.id ? payload.expense : expense // Update the correct expense\n      );\n      return {\n        expenses: updatedExpenses,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Expense Tracker\";\n  }, []);\n\n  // Initialize state with reducer\n  const [state, dispatch] = useReducer(reducer, { expenses: [] });\n  const [expenseToUpdate, setExpenseToUpdate] = useState(null);\n\n  // Function to add an expense\n  const addExpense = (expense) => {\n    if (!expense || !expense.id) return;\n    dispatch({ type: \"ADD\", payload: { expense } });\n  };\n\n  // Function to delete an expense\n  const deleteExpense = async (id) => {\n    try {\n      const docRef = doc(db, \"expenses\", id);\n      await deleteDoc(docRef); // Delete from Firestore\n      dispatch({ type: \"DELETE\", payload: { id } }); // Update state\n    } catch (error) {\n      console.error(\"Error deleting expense:\", error);\n    }\n  };\n\n  // Reset the expense to update when editing\n  const resetExpenseToUpdate = () => {\n    setExpenseToUpdate(null);\n  };\n\n  // Function to update an expense\n  const updateExpense = (expense) => {\n    dispatch({ type: \"UPDATE_EXPENSE\", payload: { expense } });\n  };\n\n  return (\n    <>\n      <h2 className=\"heading\">Expense Tracker</h2>\n      <div className=\"App\">\n        <ExpenseForm \n          addExpense={addExpense}\n          expenseToUpdate={expenseToUpdate}\n          updateExpense={updateExpense}\n          resetExpenseToUpdate={resetExpenseToUpdate} \n        />\n        <div className=\"expense\">\n          <ExpenseInfo expenses={state.expenses} />\n          <ExpenseList \n            expenses={state.expenses}\n            deleteExpense={deleteExpense}\n            changeExpenseToUpdate={setExpenseToUpdate} \n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}